self.onmessage=async e=>{const{id:t,details:a,config:l}=e.data||{};try{const e=l&&"landscape"===l.layout?1920:1080,s=l&&"landscape"===l.layout?1080:1920;if("undefined"==typeof OffscreenCanvas)return void self.postMessage({id:t,error:"OffscreenCanvas not supported"});const o=Math.max(1,Math.min(1.5,self.devicePixelRatio||1)),n=new OffscreenCanvas(Math.floor(e*o),Math.floor(s*o)),i=n.getContext("2d");i&&"function"==typeof i.scale&&i.scale(o,o),i.fillStyle=l&&l.solidColorStart||"#0f1114",i.fillRect(0,0,e,s),i.fillStyle=l&&l.textColor||"#FFFFFF",i.font=`700 ${Math.max(32,Math.min(72,(l?.titleSize||72)*("landscape"===l?.layout?.85:1)))}px sans-serif`,i.textAlign="center",i.textBaseline="top";const f=e/2,r=120,c=e-160,d=(a?.title||a?.name||"Untitled").split(" ");let p="",x=r,g=0;for(let t=0;t<d.length;t++){const e=p+d[t]+" ";if(i.measureText(e).width>c&&""!==p){if(i.fillText(p.trim(),f,x),p=d[t]+" ",x+=72,g++,g>=2)break}else p=e}p&&2>g&&i.fillText(p.trim(),f,x);const m=await n.convertToBlob({type:"image/png"});self.postMessage({id:t,blob:m},[])}catch(s){self.postMessage({id:t,error:s+""})}};
